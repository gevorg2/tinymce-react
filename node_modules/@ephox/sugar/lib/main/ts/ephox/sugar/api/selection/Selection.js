import { Adt } from '@ephox/katamari';
import Element from '../node/Element';
import * as Traverse from '../search/Traverse';
import { SimRange } from './SimRange';
import { Situ } from './Situ';
// Consider adding a type for "element"
var adt = Adt.generate([
    { domRange: ['rng'] },
    { relative: ['startSitu', 'finishSitu'] },
    { exact: ['start', 'soffset', 'finish', 'foffset'] }
]);
var exactFromRange = function (simRange) {
    return adt.exact(simRange.start(), simRange.soffset(), simRange.finish(), simRange.foffset());
};
var getStart = function (selection) {
    return selection.match({
        domRange: function (rng) {
            return Element.fromDom(rng.startContainer);
        },
        relative: function (startSitu, finishSitu) {
            return Situ.getStart(startSitu);
        },
        exact: function (start, soffset, finish, foffset) {
            return start;
        }
    });
};
var domRange = adt.domRange;
var relative = adt.relative;
var exact = adt.exact;
var getWin = function (selection) {
    var start = getStart(selection);
    return Traverse.defaultView(start);
};
// This is out of place but it's API so I can't remove it
var range = SimRange.create;
// tslint:disable-next-line:variable-name
export var Selection = {
    domRange: domRange,
    relative: relative,
    exact: exact,
    exactFromRange: exactFromRange,
    getWin: getWin,
    range: range
};
//# sourceMappingURL=Selection.js.map