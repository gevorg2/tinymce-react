import { console, document } from '@ephox/dom-globals';
import { Fun, Option } from '@ephox/katamari';
var fromHtml = function (html, scope) {
    var doc = scope || document;
    var div = doc.createElement('div');
    div.innerHTML = html;
    if (!div.hasChildNodes() || div.childNodes.length > 1) {
        // tslint:disable-next-line:no-console
        console.error('HTML does not have a single root node', html);
        throw new Error('HTML must have a single root node');
    }
    return fromDom(div.childNodes[0]);
};
var fromTag = function (tag, scope) {
    var doc = scope || document;
    var node = doc.createElement(tag);
    return fromDom(node);
};
var fromText = function (text, scope) {
    var doc = scope || document;
    var node = doc.createTextNode(text);
    return fromDom(node);
};
var fromDom = function (node) {
    if (node === null || node === undefined) {
        throw new Error('Node cannot be null or undefined');
    }
    return {
        dom: Fun.constant(node)
    };
};
var fromPoint = function (docElm, x, y) {
    var doc = docElm.dom();
    return Option.from(doc.elementFromPoint(x, y)).map(fromDom);
};
// tslint:disable-next-line:variable-name
var Element = {
    fromHtml: fromHtml,
    fromTag: fromTag,
    fromText: fromText,
    fromDom: fromDom,
    fromPoint: fromPoint
};
export default Element;
//# sourceMappingURL=Element.js.map