import { Node as DomNode, Document, Text, Element as DomElement, Comment, HTMLElement as DomHTMLElement, HTMLElementTagNameMap } from '@ephox/dom-globals';
import Element from './Element';
declare const name: (element: Element<DomNode>) => string;
declare const type: (element: Element<DomNode>) => number;
declare const value: (element: Element<DomNode>) => string;
declare const isComment: (element: Element<any>) => element is Element<Comment>;
declare const isHTMLElement: (element: Element<any>) => element is Element<DomHTMLElement>;
declare const isElement: (element: Element<any>) => element is Element<DomElement>;
declare const isText: (element: Element<any>) => element is Element<Text>;
declare const isDocument: (element: Element<any>) => element is Element<Document>;
declare const isTag: <K extends "object" | "track" | "progress" | "a" | "abbr" | "acronym" | "address" | "applet" | "area" | "article" | "aside" | "audio" | "b" | "base" | "basefont" | "bdo" | "big" | "blockquote" | "body" | "br" | "button" | "canvas" | "caption" | "center" | "cite" | "code" | "col" | "colgroup" | "data" | "datalist" | "dd" | "del" | "dfn" | "dir" | "div" | "dl" | "dt" | "em" | "embed" | "fieldset" | "figcaption" | "figure" | "font" | "footer" | "form" | "frame" | "frameset" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "head" | "header" | "hgroup" | "hr" | "html" | "i" | "iframe" | "img" | "input" | "ins" | "isindex" | "kbd" | "keygen" | "label" | "legend" | "li" | "link" | "listing" | "map" | "mark" | "marquee" | "menu" | "meta" | "meter" | "nav" | "nextid" | "nobr" | "noframes" | "noscript" | "ol" | "optgroup" | "option" | "output" | "p" | "param" | "picture" | "plaintext" | "pre" | "q" | "rt" | "ruby" | "s" | "samp" | "script" | "section" | "select" | "slot" | "small" | "source" | "span" | "strike" | "strong" | "style" | "sub" | "sup" | "table" | "tbody" | "td" | "template" | "textarea" | "tfoot" | "th" | "thead" | "time" | "title" | "tr" | "tt" | "u" | "ul" | "var" | "video" | "wbr" | "xmp">(tag: K) => (e: Element<any>) => e is Element<HTMLElementTagNameMap[K]>;
export { name, type, value, isElement, isHTMLElement, isText, isDocument, isComment, isTag, };
//# sourceMappingURL=Node.d.ts.map