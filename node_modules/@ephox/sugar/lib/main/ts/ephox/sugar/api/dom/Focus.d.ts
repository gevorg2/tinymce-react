import { Document, HTMLElement, Node as DomNode } from '@ephox/dom-globals';
import { Option } from '@ephox/katamari';
import Element from '../node/Element';
declare const focus: (element: Element<HTMLElement>) => void;
declare const blur: (element: Element<HTMLElement>) => void;
declare const hasFocus: (element: Element<DomNode>) => boolean;
declare const active: (_doc?: Element<Document>) => Option<Element<HTMLElement>>;
declare const focusInside: (element: Element<HTMLElement>) => void;
/**
 * Return the descendant element that has focus.
 * Use instead of SelectorFind.descendant(container, ':focus')
 *  because the :focus selector relies on keyboard focus.
 */
declare const search: (element: Element<DomNode>) => Option<Element<HTMLElement>>;
export { hasFocus, focus, blur, active, search, focusInside, };
//# sourceMappingURL=Focus.d.ts.map