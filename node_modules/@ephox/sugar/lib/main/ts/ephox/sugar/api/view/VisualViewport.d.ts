import { EventListenerOrEventListenerObject, Window } from '@ephox/dom-globals';
import { Option } from '@ephox/katamari';
import { EventHandler } from '../events/Types';
export interface Bounds {
    x: () => number;
    y: () => number;
    width: () => number;
    height: () => number;
    right: () => number;
    bottom: () => number;
}
declare type VisualViewport = {
    offsetLeft: number;
    offsetTop: number;
    pageLeft: number;
    pageTop: number;
    width: number;
    height: number;
    scale: number;
    addEventListener: (event: string, handler: EventListenerOrEventListenerObject) => void;
    removeEventListener: (event: string, handler: EventListenerOrEventListenerObject) => void;
};
declare const get: (_win?: Window) => Option<VisualViewport>;
declare const getBounds: (_win?: Window) => Bounds;
declare const bind: (name: string, callback: EventHandler, _win?: Window) => {
    unbind: () => void;
};
export { bind, get, getBounds, VisualViewport };
//# sourceMappingURL=VisualViewport.d.ts.map