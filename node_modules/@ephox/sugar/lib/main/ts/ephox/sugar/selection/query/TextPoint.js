import { Option, Arr } from '@ephox/katamari';
import * as Text from '../../api/node/Text';
import * as Geometry from '../alien/Geometry';
var locateOffset = function (doc, textnode, x, y, rect) {
    var rangeForOffset = function (o) {
        var r = doc.dom().createRange();
        r.setStart(textnode.dom(), o);
        r.collapse(true);
        return r;
    };
    var rectForOffset = function (o) {
        var r = rangeForOffset(o);
        return r.getBoundingClientRect();
    };
    var length = Text.get(textnode).length;
    var offset = Geometry.searchForPoint(rectForOffset, x, y, rect.right, length);
    return rangeForOffset(offset);
};
var locate = function (doc, node, x, y) {
    var r = doc.dom().createRange();
    r.selectNode(node.dom());
    var rects = r.getClientRects();
    var foundRect = Arr.findMap(rects, function (rect) {
        return Geometry.inRect(rect, x, y) ? Option.some(rect) : Option.none();
    });
    return foundRect.map(function (rect) {
        return locateOffset(doc, node, x, y, rect);
    });
};
export { locate };
//# sourceMappingURL=TextPoint.js.map