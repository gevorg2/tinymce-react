import { HTMLElement, Element as DomElement, Node as DomNode } from '@ephox/dom-globals';
import { Option } from '@ephox/katamari';
import Element from '../node/Element';
declare const set: (element: Element<DomNode>, property: string, value: string) => void;
declare const setAll: (element: Element<DomNode>, css: Record<string, string>) => void;
declare const setOptions: (element: Element<DomNode>, css: Record<string, Option<string>>) => void;
declare const get: (element: Element<DomElement>, property: string) => string;
declare const getRaw: (element: Element<DomNode>, property: string) => Option<string>;
declare const getAllRaw: (element: Element<DomNode>) => Record<string, string>;
declare const isValidValue: (tag: string, property: string, value: string) => boolean;
declare const remove: (element: Element<DomNode>, property: string) => void;
declare const preserve: <E extends DomElement, T>(element: Element<E>, f: (e: Element<E>) => T) => T;
declare const copy: (source: Element<DomNode>, target: Element<HTMLElement>) => void;
declare const reflow: (e: Element<HTMLElement>) => number;
declare const transfer: (source: Element<DomNode>, destination: Element<DomNode>, styles: string[]) => void;
export { copy, set, preserve, setAll, setOptions, remove, get, getRaw, getAllRaw, isValidValue, reflow, transfer, };
//# sourceMappingURL=Css.d.ts.map