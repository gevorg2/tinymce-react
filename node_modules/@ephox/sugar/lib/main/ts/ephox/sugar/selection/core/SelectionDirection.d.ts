import { Range, Window, Node as DomNode } from '@ephox/dom-globals';
import Element from '../../api/node/Element';
import { Selection } from '../../api/selection/Selection';
declare type SelectionDirectionHandler<U> = (start: Element<DomNode>, soffset: number, finish: Element<DomNode>, foffset: number) => U;
export interface SelectionDirection {
    fold: <U>(ltr: SelectionDirectionHandler<U>, rtl: SelectionDirectionHandler<U>) => U;
    match: <U>(branches: {
        ltr: SelectionDirectionHandler<U>;
        rtl: SelectionDirectionHandler<U>;
    }) => U;
    log: (label: string) => void;
}
declare type SelectionDirectionConstructor = (start: Element<DomNode>, soffset: number, finish: Element<DomNode>, foffset: number) => SelectionDirection;
declare const diagnose: (win: Window, selection: Selection) => SelectionDirection;
declare const asLtrRange: (win: Window, selection: Selection) => Range;
declare const ltr: SelectionDirectionConstructor;
declare const rtl: SelectionDirectionConstructor;
export { ltr, rtl, diagnose, asLtrRange, };
//# sourceMappingURL=SelectionDirection.d.ts.map