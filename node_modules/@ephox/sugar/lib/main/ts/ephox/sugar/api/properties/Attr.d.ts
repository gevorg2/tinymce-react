import { Element as DomElement, Node as DomNode } from '@ephox/dom-globals';
import { Option } from '@ephox/katamari';
import Element from '../node/Element';
declare const set: (element: Element<DomElement>, key: string, value: string | number | boolean) => void;
declare const setAll: (element: Element<DomElement>, attrs: Record<string, string | number | boolean>) => void;
declare const get: (element: Element<DomElement>, key: string) => string;
declare const getOpt: (element: Element<DomElement>, key: string) => Option<string>;
declare const has: (element: Element<DomNode>, key: string) => boolean;
declare const remove: (element: Element<DomElement>, key: string) => void;
declare const hasNone: (element: Element<DomNode>) => boolean;
declare const clone: (element: Element<DomElement>) => Record<string, string>;
declare const transfer: (source: Element<DomElement>, destination: Element<DomElement>, attrs: string[]) => void;
export { clone, set, setAll, get, getOpt, has, remove, hasNone, transfer, };
//# sourceMappingURL=Attr.d.ts.map