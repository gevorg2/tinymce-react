import { Window, Document, Element as DomElement } from '@ephox/dom-globals';
import Element from '../node/Element';
import { Position } from './Position';
declare const get: (_DOC?: Element<Document>) => Position;
declare const to: (x: number, y: number, _DOC?: Element<Document>) => void;
declare const by: (x: number, y: number, _DOC?: Element<Document>) => void;
declare const setToElement: (win: Window, element: Element<DomElement>) => void;
declare const preserve: (doc: Element<Document>, f: () => void) => void;
declare const capture: (doc: Element<Document>) => {
    save: () => void;
    restore: () => void;
};
declare const intoView: (element: Element<DomElement>, alignToTop: boolean) => void;
declare const intoViewIfNeeded: (element: Element<DomElement>, container: Element<DomElement>) => void;
declare const scrollBarWidth: () => number;
export { get, to, by, preserve, capture, intoView, intoViewIfNeeded, setToElement, scrollBarWidth, };
//# sourceMappingURL=Scroll.d.ts.map