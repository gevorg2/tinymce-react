import { Arr, Fun } from '@ephox/katamari';
import * as Compare from '../dom/Compare';
import * as PredicateExists from './PredicateExists';
var ancestor = function (element, target) {
    return PredicateExists.ancestor(element, Fun.curry(Compare.eq, target));
};
var anyAncestor = function (element, targets) {
    return Arr.exists(targets, function (target) {
        return ancestor(element, target);
    });
};
var sibling = function (element, targets) {
    return PredicateExists.sibling(element, function (elem) { return Arr.exists(targets, Fun.curry(Compare.eq, elem)); });
};
var child = function (element, target) {
    return PredicateExists.child(element, Fun.curry(Compare.eq, target));
};
var descendant = function (element, target) {
    return PredicateExists.descendant(element, Fun.curry(Compare.eq, target));
};
export { ancestor, anyAncestor, sibling, child, descendant, };
//# sourceMappingURL=Has.js.map