import * as Compare from '../core/Compare';
import { TestLabel } from './TestLabel';
var eq = function (expected, actual, message) {
    var result = Compare.compare(expected, actual);
    if (!result.eq) {
        throw new Error(TestLabel.asStringOr(message, result.why));
    }
};
var throws = function (f, expected, message) {
    var token = {};
    try {
        f();
        // noinspection ExceptionCaughtLocallyJS
        throw token;
    }
    catch (e) {
        if (e === token) {
            throw new Error(TestLabel.asStringOr(message, function () { return 'Expected function to throw, but it didn\'t.'; }));
        }
        if (expected !== undefined) {
            eq(expected, e, message);
        }
    }
};
var throwsError = function (f, expected, message) {
    var token = {};
    try {
        f();
        // noinspection ExceptionCaughtLocallyJS
        throw token;
    }
    catch (e) {
        if (e === token) {
            throw new Error(TestLabel.asStringOr(message, function () { return 'Expected function to throw, but it didn\'t.'; }));
        }
        if (expected !== undefined) {
            eq(expected, e.message, message);
        }
    }
};
var succeeds = function (f, message) {
    try {
        f();
    }
    catch (e) {
        throw new Error(TestLabel.asStringOr(message, function () { return 'Expected function to not throw, but it did.'; }));
    }
};
var fail = function (message) {
    throw new Error(TestLabel.asStringOr(message, function () { return 'Test failed'; }));
};
export { eq, throws, throwsError, succeeds, fail };
//# sourceMappingURL=LegacyAssert.js.map