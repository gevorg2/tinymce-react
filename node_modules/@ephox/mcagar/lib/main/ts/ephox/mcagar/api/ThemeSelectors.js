import { Global, Arr } from '@ephox/katamari';
var isSilver = function () {
    var tinymce = Global.tinymce;
    if (!tinymce) {
        throw new Error('Failed to get global tinymce');
    }
    return tinymce.activeEditor.hasOwnProperty('ui');
};
var isModern = function () { return !isSilver(); };
var ModernThemeSelectors = {
    toolBarSelector: function () { return '.mce-toolbar-grp'; },
    menuBarSelector: '.mce-menubar',
    dialogCloseSelector: 'div[role="button"]:contains(Cancel)',
    dialogSubmitSelector: 'div[role="button"].mce-primary'
};
var SilverThemeSelectors = {
    toolBarSelector: function (editor) { return Arr.exists([editor.settings.toolbar_mode, editor.settings.toolbar_drawer], function (s) { return s === 'floating' || s === 'sliding'; }) ? '.tox-toolbar-overlord' : '.tox-toolbar'; },
    menuBarSelector: '.tox-menubar',
    dialogCloseSelector: '.tox-button:contains("Cancel")',
    dialogSubmitSelector: '.tox-button:contains("Save")'
};
var getThemeSelectors = function () {
    return isModern() ? ModernThemeSelectors : SilverThemeSelectors;
};
export { getThemeSelectors, isModern, isSilver };
//# sourceMappingURL=ThemeSelectors.js.map