import { Step } from '@ephox/agar';
import { Element, SimRange } from '@ephox/sugar';
import { Editor } from '../alien/EditorTypes';
declare type ContentGenerator = any;
declare type SelectionExclusions = {
    containers: (container: Element) => boolean;
};
declare type ArbScenarioOptions = {
    exclusions: SelectionExclusions;
};
declare type AsyncPropertyOptions = {
    scenario: ArbScenarioOptions;
    property: Record<string, any>;
};
interface Scenario {
    input: string;
    selection: SimRange;
}
export interface TinyScenarios {
    genScenario: (genContent: ContentGenerator, selectionExclusions: SelectionExclusions) => Scenario;
    arbScenario: (genContent: ContentGenerator, options: ArbScenarioOptions) => Scenario;
    sAsyncProperty: <T, X, Y>(label: string, generator: ContentGenerator, step: Step<X, Y>, options: AsyncPropertyOptions) => Step<T, T>;
}
export declare const TinyScenarios: (editor: Editor) => TinyScenarios;
export {};
//# sourceMappingURL=TinyScenarios.d.ts.map