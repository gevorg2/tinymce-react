import { OptionDefinition } from 'command-line-args';
import { Attempt } from '../core/Attempt';
export interface ClOption extends OptionDefinition {
    required?: boolean;
    output?: string;
    uncommon?: boolean;
    flatten?: boolean;
    description: string;
    validate: (n: string, v: string) => Attempt<string[], any>;
    hidden?: boolean;
}
export declare const name: ClOption;
export declare const output: ClOption;
export declare const browser: ClOption;
export declare const bundler: ClOption;
export declare const configTo: (defaultValue: string) => ClOption;
export declare const config: ClOption;
export declare const files: ClOption;
export declare const testdir: ClOption;
export declare const testdirs: ClOption;
export declare const page: ClOption;
export declare const projectdir: (currentDir: string) => ClOption;
export declare const basedir: (binDir: string) => ClOption;
export declare const debuggingPort: ClOption;
export declare const bucket: ClOption;
export declare const buckets: ClOption;
export declare const overallTimeout: ClOption;
export declare const singleTimeout: ClOption;
export declare const framework: ClOption;
export declare const help: ClOption;
export declare const logging: ClOption;
export declare const version: ClOption;
export declare const chunk: ClOption;
export declare const retries: ClOption;
export declare const stopOnFailure: ClOption;
export declare const wipeBrowserCache: ClOption;
export declare const stopOnFailure__hidden: ClOption;
export declare const customRoutes: ClOption;
export declare const delayExiting: ClOption;
export declare const useSandboxForHeadless: ClOption;
export declare const coverage: ClOption;
export declare const skipResetMousePosition: ClOption;
