"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ExitCodes_1 = require("../util/ExitCodes");
const Attempt_1 = require("./Attempt");
exports.shutdown = (promise, driver, done, gruntDone, delayExiting) => {
    const exitDelay = () => {
        // 17 minutes should be enough, if it's not we can make this configurable later.
        return delayExiting ? driver.pause(17 * 60 * 1000) : Promise.resolve();
    };
    const exit = (exitCode) => () => {
        if (gruntDone !== null)
            gruntDone(exitCode === 0);
        else
            process.exit(exitCode);
    };
    return promise.then((res) => {
        // Only check the delay exit option if tests failed.
        const delay = Attempt_1.Attempt.cata(res, () => exitDelay(), () => Promise.resolve());
        return delay.then(() => {
            return Attempt_1.Attempt.cata(res, (errs) => {
                console.log(errs.join('\n'));
                return done().then(exit(ExitCodes_1.ExitCodes.failures.tests));
            }, () => {
                console.log('All tests passed.');
                return done().then(exit(ExitCodes_1.ExitCodes.success));
            });
        });
    }).catch((err) => {
        return exitDelay().then(() => {
            console.error('********** Unexpected Bedrock Error -> Server Quitting **********');
            console.error(err);
            return done().then(exit(ExitCodes_1.ExitCodes.failures.unexpected));
        });
    });
};
//# sourceMappingURL=Lifecycle.js.map