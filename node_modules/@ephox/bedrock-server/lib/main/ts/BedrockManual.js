"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Attempt_1 = require("./bedrock/core/Attempt");
const Version = require("./bedrock/core/Version");
const RunnerRoutes = require("./bedrock/server/RunnerRoutes");
const Webpack = require("./bedrock/compiler/Webpack");
const ExitCodes_1 = require("./bedrock/util/ExitCodes");
exports.go = (settings) => {
    const basePage = 'src/resources/html/bedrock.html';
    const routes = RunnerRoutes.generate('manual', settings.projectdir, settings.basedir, settings.config, settings.bundler, settings.testfiles, settings.chunk, 0, settings.singleTimeout, true, basePage, settings.coverage);
    console.log('bedrock-manual ' + Version.get() + ' starting...');
    routes.then((runner) => {
        const serveSettings = {
            projectdir: settings.projectdir,
            basedir: settings.basedir,
            testfiles: settings.testfiles,
            // There is no driver for manual mode.
            driver: Attempt_1.Attempt.failed('There is no webdriver for manual mode'),
            master: null,
            runner: runner,
            loglevel: settings.loglevel,
            customRoutes: settings.customRoutes,
            config: settings.config,
            coverage: settings.coverage,
            overallTimeout: settings.overallTimeout,
            singleTimeout: settings.singleTimeout,
            // sticky session is used by auto mode only
            stickyFirstSession: false,
            // reset mouse position will never work on manual
            skipResetMousePosition: true
        };
        return Webpack.devserver(serveSettings).then((service) => {
            service.enableHud();
            console.log('bedrock-manual ' + Version.get() + ' available at: http://localhost:' + service.port);
        }, (err) => {
            console.error(err);
            process.exit(ExitCodes_1.ExitCodes.failures.error);
        });
    });
};
exports.mode = 'forManual';
//# sourceMappingURL=BedrockManual.js.map