import { FutureResult } from '@ephox/katamari';
import { UnitTest, assert } from '@ephox/bedrock-client';
import * as Http from 'ephox/jax/core/Http';
import { readBlobAsText } from 'ephox/jax/core/BlobReader';
UnitTest.asynctest('HttpDownloadTest', function (success, failure) {
    var progressCalls = 0;
    var total = 0;
    Http.download({
        url: '/custom/jax/blob',
        headers: {
            'x-custom-header': 'custom'
        },
        progress: function (loaded) {
            progressCalls++;
            total += loaded;
        }
    }).bindFuture(function (blob) {
        return FutureResult.fromFuture(readBlobAsText(blob));
    }).get(function (result) {
        result.fold(function (err) { return failure(err.message); }, function (actualText) {
            var expectedText = JSON.stringify({ results: { data: '123' } }, null, '  ');
            assert.eq(expectedText, actualText, 'Should be the expected text');
            assert.eq(true, progressCalls > 1, 'Should be more than 1 progress calls');
            assert.eq(40, total, 'Should be 40 bytes of data in total');
            success();
        });
    });
});
//# sourceMappingURL=HttpDownloadTest.js.map