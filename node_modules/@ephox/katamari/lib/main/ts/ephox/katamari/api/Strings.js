import * as StrAppend from '../str/StrAppend';
var checkRange = function (str, substr, start) {
    if (substr === '') {
        return true;
    }
    if (str.length < substr.length) {
        return false;
    }
    var x = str.substr(start, start + substr.length);
    return x === substr;
};
/** Given a string and object, perform template-replacements on the string, as specified by the object.
 * Any template fields of the form ${name} are replaced by the string or number specified as obj["name"]
 * Based on Douglas Crockford's 'supplant' method for template-replace of strings. Uses different template format.
 */
export var supplant = function (str, obj) {
    var isStringOrNumber = function (a) {
        var t = typeof a;
        return t === 'string' || t === 'number';
    };
    return str.replace(/\$\{([^{}]*)\}/g, function (fullMatch, key) {
        var value = obj[key];
        return isStringOrNumber(value) ? value.toString() : fullMatch;
    });
};
export var removeLeading = function (str, prefix) {
    return startsWith(str, prefix) ? StrAppend.removeFromStart(str, prefix.length) : str;
};
export var removeTrailing = function (str, suffix) {
    return endsWith(str, suffix) ? StrAppend.removeFromEnd(str, suffix.length) : str;
};
export var ensureLeading = function (str, prefix) {
    return startsWith(str, prefix) ? str : StrAppend.addToStart(str, prefix);
};
export var ensureTrailing = function (str, suffix) {
    return endsWith(str, suffix) ? str : StrAppend.addToEnd(str, suffix);
};
export var contains = function (str, substr) {
    return str.indexOf(substr) !== -1;
};
export var capitalize = function (str) {
    return str === '' ? '' : str.charAt(0).toUpperCase() + str.substring(1);
};
/** Does 'str' start with 'prefix'?
 *  Note: all strings start with the empty string.
 *        More formally, for all strings x, startsWith(x, "").
 *        This is so that for all strings x and y, startsWith(y + x, y)
 */
export var startsWith = function (str, prefix) {
    return checkRange(str, prefix, 0);
};
/** Does 'str' end with 'suffix'?
 *  Note: all strings end with the empty string.
 *        More formally, for all strings x, endsWith(x, "").
 *        This is so that for all strings x and y, endsWith(x + y, y)
 */
export var endsWith = function (str, suffix) {
    return checkRange(str, suffix, str.length - suffix.length);
};
/** removes all leading and trailing spaces */
export var trim = function (str) {
    return str.replace(/^\s+|\s+$/g, '');
};
export var lTrim = function (str) {
    return str.replace(/^\s+/g, '');
};
export var rTrim = function (str) {
    return str.replace(/\s+$/g, '');
};
//# sourceMappingURL=Strings.js.map