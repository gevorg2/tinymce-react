import * as Fun from './Fun';
import { Pprint, Eq, Testable, Pnode } from '@ephox/dispute';
var ppHelper = function (s, pp) { return function (a) { return Pnode.pnode('Result.' + s + '(', [pp.pprint(a)], ')'); }; };
export var pprintResult = function (pprintA, pprintE) {
    if (pprintA === void 0) { pprintA = Pprint.pprintAny; }
    if (pprintE === void 0) { pprintE = Pprint.pprintAny; }
    return Pprint.pprint(function (r) { return r.fold(ppHelper('error', pprintE), ppHelper('value', pprintA)); });
};
export var eqResult = function (eqA, eqE) {
    if (eqA === void 0) { eqA = Eq.eqAny; }
    if (eqE === void 0) { eqE = Eq.eqAny; }
    return Eq.eq(function (oa, ob) { return oa.fold(function (e1) { return ob.fold(function (e2) { return eqE.eq(e1, e2); }, Fun.never); }, function (a1) { return ob.fold(Fun.never, function (a2) { return eqA.eq(a1, a2); }); }); });
};
export var tResult = function (testableA, testableE) {
    if (testableA === void 0) { testableA = Testable.tAny; }
    if (testableE === void 0) { testableE = Testable.tAny; }
    return Testable.testable(eqResult(testableA, testableE), pprintResult(testableA, testableE));
};
//# sourceMappingURL=ResultInstances.js.map