import * as Throttler from 'ephox/katamari/api/Throttler';
import { UnitTest, Assert } from '@ephox/bedrock-client';
import { setTimeout } from '@ephox/dom-globals';
UnitTest.asynctest('Throttler.adaptable', function (success) {
    var data = [];
    var throttler = Throttler.adaptable(function (value) {
        data.push(value);
    }, 250);
    throttler.throttle('cat');
    throttler.throttle('dog');
    throttler.throttle('elephant');
    throttler.throttle('frog');
    setTimeout(function () {
        Assert.eq('eq', ['frog'], data);
        throttler.throttle('frog-goose');
        throttler.throttle('goose');
        setTimeout(function () {
            Assert.eq('eq', ['frog', 'goose'], data);
            success();
        }, 500);
    }, 500);
});
UnitTest.asynctest('Throttler.first', function (success) {
    var data = [];
    var throttler = Throttler.first(function (value) {
        data.push(value);
    }, 250);
    throttler.throttle('cat');
    throttler.throttle('dog');
    throttler.throttle('elephant');
    throttler.throttle('frog');
    setTimeout(function () {
        Assert.eq('eq', ['cat'], data);
        throttler.throttle('frog-goose');
        throttler.throttle('goose');
        setTimeout(function () {
            Assert.eq('eq', ['cat', 'frog-goose'], data);
            success();
        }, 500);
    }, 500);
});
UnitTest.asynctest('Throttler.last', function (success) {
    var data = [];
    var throttler = Throttler.last(function (value) {
        data.push(value);
    }, 250);
    throttler.throttle('cat');
    throttler.throttle('dog');
    throttler.throttle('elephant');
    throttler.throttle('frog');
    setTimeout(function () {
        Assert.eq('eq', ['frog'], data);
        throttler.throttle('frog-goose');
        throttler.throttle('goose');
        setTimeout(function () {
            Assert.eq('eq', ['frog', 'goose'], data);
            success();
        }, 500);
    }, 500);
});
//# sourceMappingURL=ThrottlerTest.js.map