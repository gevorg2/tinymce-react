import { Assert, UnitTest } from '@ephox/bedrock-client';
import { Chain, GeneralSteps, Logger, Pipeline, Step } from 'ephox/agar/api/Main';
import { createFile } from 'ephox/agar/api/Files';
import { Blob, navigator } from '@ephox/dom-globals';
import { cRunOnPatchedFileInput, sRunOnPatchedFileInput } from 'ephox/agar/api/FileInput';
import { Body, Element, Insert, Remove } from '@ephox/sugar';
import { Cell, Option } from '@ephox/katamari';
UnitTest.asynctest('PatchFileInputTest', function (success, failure) {
    var files = [createFile('a.txt', 0, new Blob(['x']))];
    var filesState = Cell(Option.none());
    var pickFiles = function (body, next) {
        var elm = Element.fromHtml('<input type="file">');
        elm.dom().onchange = function () {
            Remove.remove(elm);
            next(elm.dom().files);
        };
        Insert.append(body, elm);
        elm.dom().click();
    };
    var cPickFiles = Chain.async(function (input, next, die) { return pickFiles(input, next); });
    var sPickFiles = Step.async(function (next, die) { return pickFiles(Body.body(), function (files) {
        filesState.set(Option.some(files));
        next();
    }); });
    var assetFiles = function (files) {
        Assert.eq('Should be expected number of files', 1, files.length);
        Assert.eq('Should be expected file name', 'a.txt', files[0].name);
        Assert.eq('Should be expected file size', 1, files[0].size);
    };
    Pipeline.async({}, /phantom/i.test(navigator.userAgent) ? [] : [
        Logger.t('Patch file input step', GeneralSteps.sequence([
            sRunOnPatchedFileInput(files, sPickFiles),
            Step.sync(function () {
                var files = filesState.get().getOrDie('Failed to get files state');
                assetFiles(files);
                filesState.set(Option.none());
            })
        ])),
        Logger.t('Patch file input chain', Chain.asStep(Body.body(), [
            cRunOnPatchedFileInput(files, cPickFiles),
            Chain.op(assetFiles)
        ]))
    ], success, failure);
});
//# sourceMappingURL=PatchFileInputTest.js.map