import { Id, Option } from '@ephox/katamari';
var modeId = Id.generate('mode');
var setMode = function (mode) { return function (transfer) {
    var dt = transfer;
    dt[modeId] = mode;
}; };
var checkMode = function (expectedMode) { return function (transfer) {
    var dt = transfer;
    return Option.from(dt[modeId]).exists(function (mode) { return mode === expectedMode; });
}; };
var setReadWriteMode = setMode(0 /* ReadWrite */);
var setProtectedMode = setMode(1 /* Protected */);
var setReadOnlyMode = setMode(2 /* ReadOnly */);
var isInReadWriteMode = checkMode(0 /* ReadWrite */);
var isInProtectedMode = checkMode(1 /* Protected */);
var isInReadOnlyMode = checkMode(2 /* ReadOnly */);
export { setReadWriteMode, setProtectedMode, setReadOnlyMode, isInReadWriteMode, isInProtectedMode, isInReadOnlyMode };
//# sourceMappingURL=Mode.js.map