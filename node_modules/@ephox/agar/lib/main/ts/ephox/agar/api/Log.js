import { Arr } from '@ephox/katamari';
import { Chain } from './Chain';
import { sequence } from './GeneralSteps';
import { Step } from './Step';
var generateLogMsg = function (testId, description) {
    // AP-147 Format: 'TestCase-<plugin name>-<test case ID / TBA:> <description of the test>'
    return "TestCase-" + testId + ": " + description;
};
var step = function (testId, description, f) {
    return Step.label(generateLogMsg(testId, description), f);
};
var steps = function (testId, description, fs) {
    return Arr.map(fs, function (f, i) { return step(testId, description + ' (' + i + ')', f); });
};
var stepsAsStep = function (testId, description, fs) {
    return sequence(steps(testId, description, fs));
};
var chain = function (testId, description, c) {
    return Chain.label(generateLogMsg(testId, description), c);
};
var chains = function (testId, description, cs) {
    return Arr.map(cs, function (c, i) { return chain(testId, description + ' (' + i + ')', c); });
};
var chainsAsChain = function (testId, description, cs) {
    return Chain.fromChains(chains(testId, description, cs));
};
var chainsAsStep = function (testId, description, cs) {
    return Chain.asStep({}, chains(testId, description, cs));
};
export { step, steps, stepsAsStep, chain, chains, chainsAsChain, chainsAsStep, };
//# sourceMappingURL=Log.js.map