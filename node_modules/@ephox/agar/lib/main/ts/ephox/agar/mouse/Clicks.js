import { window } from '@ephox/dom-globals';
import { Location } from '@ephox/sugar';
var LEFT_CLICK = 0;
var RIGHT_CLICK = 2;
// Note: This can be used for phantomjs.
var trigger = function (element) {
    var ele = element.dom();
    if (ele.click !== undefined) {
        return ele.click();
    }
    // Adapted from: http://stackoverflow.com/questions/17468611/triggering-click-event-phantomjs
    point('click', LEFT_CLICK, element, 0, 0);
    return undefined;
};
var point = function (type, button, element, x, y) {
    // Adapted from: http://stackoverflow.com/questions/17468611/triggering-click-event-phantomjs
    var ev = element.dom().ownerDocument.createEvent('MouseEvents');
    ev.initMouseEvent(type, true /* bubble */, true /* cancelable */, window, null, x, y, x, y, /* coordinates */ false, false, false, false, /* modifier keys */ button, null);
    element.dom().dispatchEvent(ev);
};
var click = function (eventType, button) { return function (element) {
    var position = Location.absolute(element);
    point(eventType, button, element, position.left(), position.top());
}; };
var clickAt = function (eventType, button) { return function (dx, dy) { return function (element) {
    var position = Location.absolute(element);
    point(eventType, button, element, position.left() + dx, position.top() + dy);
}; }; };
var mousedown = click('mousedown', LEFT_CLICK);
var mouseup = click('mouseup', LEFT_CLICK);
var mouseupTo = clickAt('mouseup', LEFT_CLICK);
var mousemove = click('mousemove', LEFT_CLICK);
var mousemoveTo = clickAt('mousemove', LEFT_CLICK);
var mouseover = click('mouseover', LEFT_CLICK);
var mouseout = click('mouseout', LEFT_CLICK);
var contextmenu = click('contextmenu', RIGHT_CLICK);
export { trigger, mousedown, mouseup, mouseupTo, mousemove, mousemoveTo, mouseover, mouseout, contextmenu, point };
//# sourceMappingURL=Clicks.js.map