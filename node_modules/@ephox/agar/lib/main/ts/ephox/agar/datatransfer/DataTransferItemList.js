import { Arr, Type } from '@ephox/katamari';
import { createDataTransferItemFromString, createDataTransferItemFromFile } from './DataTransferItem';
import { isInReadWriteMode } from './Mode';
var throwInvalidState = function () {
    throw new Error('Invalid state dataTransfer is not in read/write mode');
};
var createDataTransferItemList = function (dataTransfer) {
    var items = [];
    var createIndexes = function (list, items) {
        for (var i = 0; i < list.length; i++) {
            delete list[i];
        }
        list.length = items.length;
        Arr.each(items, function (item, idx) {
            list[idx] = item;
        });
    };
    var list = {
        length: 0,
        add: function (data, type) {
            if (isInReadWriteMode(dataTransfer) === false) {
                throwInvalidState();
            }
            if (Type.isString(data)) {
                var hasType = Arr.exists(items, function (item) { return item.type === type; });
                if (hasType) {
                    throw new Error("Failed to execute 'add' on 'DataTransferItemList': An item already exists for type '" + type + "'.");
                }
                items.push(createDataTransferItemFromString(dataTransfer, type, data));
                createIndexes(list, items);
            }
            else {
                items.push(createDataTransferItemFromFile(dataTransfer, data));
                createIndexes(list, items);
            }
        },
        remove: function (idx) {
            if (isInReadWriteMode(dataTransfer) === false) {
                throwInvalidState();
            }
            items.splice(idx, 1);
            createIndexes(list, items);
        },
        clear: function () {
            if (isInReadWriteMode(dataTransfer) === false) {
                throwInvalidState();
            }
            items.splice(0, items.length);
            createIndexes(list, items);
        }
    };
    // Needed to coerce since the add method has overloads
    return list;
};
export { createDataTransferItemList };
//# sourceMappingURL=DataTransferItemList.js.map