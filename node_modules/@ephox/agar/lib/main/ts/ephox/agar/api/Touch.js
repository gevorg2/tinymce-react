import { Focus } from '@ephox/sugar';
import { Step } from '@ephox/agar';
import * as Touches from '../touch/Touches';
import { Chain } from './Chain';
import * as UiFinder from './UiFinder';
var cTrigger = function (selector, action) {
    return Chain.async(function (container, next, die) {
        UiFinder.findIn(container, selector).fold(function () { return die('Could not find element: ' + selector); }, function (ele) {
            action(ele);
            next(container);
        });
    });
};
var sTriggerWith = function (container, selector, action) {
    return Chain.asStep(container, [cTrigger(selector, action)]);
};
var trueTap = function (elem) {
    // The closest event queue to a true tap event
    Focus.focus(elem);
    Touches.touchstart(elem);
    Touches.touchend(elem);
};
var tap = function (elem) {
    Touches.touchstart(elem);
    Touches.touchend(elem);
};
var sTap = function (element) { return Step.sync(function () { return tap(element); }); };
var sTrueTapOn = function (container, selector) {
    return sTriggerWith(container, selector, trueTap);
};
var sTapOn = function (container, selector) {
    return sTriggerWith(container, selector, tap);
};
var cTapOn = function (selector) {
    return cTrigger(selector, tap);
};
var cTouchStartAt = function (dx, dy) {
    return Chain.op(Touches.touchstartAt(dx, dy));
};
var cTouchEndAt = function (dx, dy) {
    return Chain.op(Touches.touchendAt(dx, dy));
};
var cTouchMoveTo = function (dx, dy) {
    return Chain.op(Touches.touchmoveTo(dx, dy));
};
var point = Touches.point;
var cTrueTap = Chain.op(trueTap);
var cTap = Chain.op(tap);
var cTouchMove = Chain.op(Touches.touchmove);
var cTouchStart = Chain.op(Touches.touchstart);
var cTouchEnd = Chain.op(Touches.touchend);
export { point, sTap, sTapOn, sTrueTapOn, cTap, cTapOn, cTrueTap, cTouchStart, cTouchStartAt, cTouchMove, cTouchMoveTo, cTouchEnd, cTouchEndAt };
//# sourceMappingURL=Touch.js.map