import { Chain } from './Chain';
import { cFindIn } from './UiFinder';
import { Body } from '@ephox/sugar';
import { getWindowFromElement } from '../dragndrop/DndEvents';
import { createDataTransfer } from '../datatransfer/DataTransfer';
import { Arr, Obj } from '@ephox/katamari';
import { createPasteEvent, createCopyEvent, createCutEvent } from '../clipboard/ClipboardEvents';
import * as ChainSequence from './ChainSequence';
var cPasteDataTransfer = function (mutator) {
    return Chain.op(function (target) {
        var win = getWindowFromElement(target);
        var dataTransfer = createDataTransfer();
        var event = createPasteEvent(win, 0, 0, dataTransfer);
        mutator(dataTransfer);
        target.dom().dispatchEvent(event);
    });
};
var cPasteItems = function (items) {
    return cPasteDataTransfer(function (dataTransfer) {
        Obj.each(items, function (data, mime) {
            dataTransfer.setData(mime, data);
        });
    });
};
var cPasteFiles = function (files) {
    return cPasteDataTransfer(function (dataTransfer) {
        Arr.each(files, function (file) {
            dataTransfer.items.add(file);
        });
    });
};
var sPasteDataTransfer = function (mutator, selector) {
    return Chain.isolate({}, ChainSequence.sequence([
        Chain.injectThunked(Body.body),
        cFindIn(selector),
        cPasteDataTransfer(mutator)
    ]));
};
var sPasteItems = function (items, selector) {
    return Chain.isolate({}, ChainSequence.sequence([
        Chain.injectThunked(Body.body),
        cFindIn(selector),
        cPasteItems(items)
    ]));
};
var sPasteFiles = function (files, selector) {
    return Chain.isolate({}, ChainSequence.sequence([
        Chain.injectThunked(Body.body),
        cFindIn(selector),
        cPasteFiles(files)
    ]));
};
var cCut = Chain.mapper(function (target) {
    var win = getWindowFromElement(target);
    var dataTransfer = createDataTransfer();
    var event = createCutEvent(win, 0, 0, dataTransfer);
    target.dom().dispatchEvent(event);
    return dataTransfer;
});
var cCopy = Chain.mapper(function (target) {
    var win = getWindowFromElement(target);
    var dataTransfer = createDataTransfer();
    var event = createCopyEvent(win, 0, 0, dataTransfer);
    target.dom().dispatchEvent(event);
    return dataTransfer;
});
export { cPasteDataTransfer, cPasteItems, cPasteFiles, sPasteDataTransfer, sPasteItems, sPasteFiles, cCut, cCopy };
//# sourceMappingURL=Clipboard.js.map