import { Arr } from '@ephox/katamari';
import { Traverse } from '@ephox/sugar';
import { keyevent } from '../keyboard/FakeKeys';
import { Chain } from './Chain';
import * as FocusTools from './FocusTools';
/*
  doc - document scope
  value - which keycode
  modifiers - { shift: BOOL, alt: BOOL }
  dispatcher - dispatch event from some element
*/
var fakeKeys = function (types) { return function (value, modifiers, dispatcher) {
    var doc = Traverse.owner(dispatcher);
    Arr.each(types, function (type) {
        keyevent(type, doc, value, modifiers, dispatcher);
    });
}; };
var cFakeKey = function (types, keyvalue, modifiers) {
    return Chain.op(function (dispatcher) {
        fakeKeys(types)(keyvalue, modifiers, dispatcher);
    });
};
var sFakeKey = function (types) {
    return function (doc, keyvalue, modifiers) {
        return Chain.asStep(doc, [
            FocusTools.cGetFocused,
            cFakeKey(types, keyvalue, modifiers)
        ]);
    };
};
var keydownTypes = ['keydown'];
var keyupTypes = ['keyup'];
var keypressTypes = ['keypress'];
// Should throw an error
var keystrokeTypes = ['keydown', 'keyup'];
var keydown = fakeKeys(keydownTypes);
var keyup = fakeKeys(keyupTypes);
var keypress = fakeKeys(keypressTypes);
var keystroke = fakeKeys(keystrokeTypes);
var sKeydown = sFakeKey(keydownTypes);
var sKeyup = sFakeKey(keyupTypes);
var sKeypress = sFakeKey(keypressTypes);
var sKeystroke = sFakeKey(keystrokeTypes);
export { keydown, keyup, keypress, keystroke, sKeydown, sKeyup, sKeypress, sKeystroke };
//# sourceMappingURL=Keyboard.js.map