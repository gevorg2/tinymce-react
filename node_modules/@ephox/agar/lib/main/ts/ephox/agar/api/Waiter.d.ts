import { Step } from './Step';
import { Chain } from './Chain';
declare const sTryUntilPredicate: <T>(label: string, p: (value: T) => boolean, interval?: number, amount?: number) => Step<T, T>;
declare const sTryUntil: <T, U>(label: string, step: Step<T, U>, interval?: number, amount?: number) => Step<T, U>;
declare const sTryUntilNot: <T, U>(label: string, step: Step<T, U>, interval?: number, amount?: number) => Step<T, T>;
declare const sTimeout: <T, U>(label: string, step: Step<T, U>, limit?: number) => Step<T, U>;
declare const cTryUntilPredicate: <T>(label: string, p: (value: T) => boolean, interval?: number, amount?: number) => Chain<T, T>;
declare const cTryUntil: <T, U>(label: string, chain: Chain<T, U>, interval?: number, amount?: number) => Chain<T, U>;
declare const cTryUntilNot: <T, U>(label: string, chain: Chain<T, U>, interval?: number, amount?: number) => Chain<T, T>;
declare const cTimeout: <T, U>(label: string, chain: Chain<T, U>, limit?: number) => Chain<T, U>;
export { sTryUntilPredicate, sTryUntil, sTryUntilNot, sTimeout, cTryUntilPredicate, cTryUntil, cTryUntilNot, cTimeout };
//# sourceMappingURL=Waiter.d.ts.map