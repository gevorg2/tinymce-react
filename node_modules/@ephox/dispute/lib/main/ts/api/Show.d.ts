/** Display the value as it would appear as a literal value in code.
 *  Useful for debug output.
 *
 *  Note this is *not* like Java toString.
 *  So, showString.show("abc") = "'abc'" *not* "abc"
 */
export interface Show<A> {
    show: (a: A) => string;
}
export declare const show: <A>(f: (a: A) => string) => Show<A>;
export declare const showConst: (s: string) => Show<any>;
export declare const showStringCtor: Show<any>;
export declare const showJsonStringify: Show<any>;
export declare const showUndefined: Show<undefined>;
export declare const showNull: Show<null>;
export declare const showBoolean: Show<boolean>;
export declare const showNumber: Show<number>;
export declare const showString: Show<string>;
export declare const showFunction: Show<Function>;
export declare const showArray: <A>(showA: Show<A>) => Show<ArrayLike<A>>;
export declare const showRecord: <A>(showA: Show<A>) => Show<Record<string, A>>;
