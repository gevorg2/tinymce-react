/** A way of comparing two values of the same type for equality. */
export interface Eq<A> {
    eq: (x: A, y: A) => boolean;
}
export declare const contramap: <A, B>(eqa: Eq<A>, f: (b: B) => A) => Eq<B>;
export declare const eq: <A>(f: (x: A, y: A) => boolean) => Eq<A>;
export declare const tripleEq: Eq<any>;
export declare const eqString: Eq<string>;
export declare const eqBoolean: Eq<boolean>;
export declare const eqNumber: Eq<number>;
export declare const eqUndefined: Eq<undefined>;
export declare const eqNull: Eq<null>;
export declare const eqArray: <A>(eqa: Eq<A>) => Eq<ArrayLike<A>>;
export declare const eqRecord: <A>(eqa: Eq<A>) => Eq<Record<string, A>>;
export declare const eqAny: Eq<any>;
