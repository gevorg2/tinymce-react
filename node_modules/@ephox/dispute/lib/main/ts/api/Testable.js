var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { eqUndefined, eqNull, eqString, eqNumber, eqArray, eqRecord, eqAny, tripleEq } from './Eq';
import { pprintUndefined, pprintNull, pprintString, pprintNumber, pprintArray, pprintRecord, pprintAny } from './Pprint';
export var testable = function (eqA, pprintA) { return (__assign(__assign({}, eqA), pprintA)); };
export var tUndefined = testable(eqUndefined, pprintUndefined);
export var tNull = testable(eqNull, pprintNull);
export var tString = testable(eqString, pprintString);
export var tNumber = testable(eqNumber, pprintNumber);
export var tArray = function (ta) {
    return testable(eqArray(ta), pprintArray(ta));
};
export var tRecord = function (ta) {
    return testable(eqRecord(ta), pprintRecord(ta));
};
export var tAny = testable(eqAny, pprintAny);
export var tStrict = testable(tripleEq, pprintAny);
//# sourceMappingURL=Testable.js.map