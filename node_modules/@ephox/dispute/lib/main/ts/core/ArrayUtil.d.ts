export declare const map: <A, B>(xs: ArrayLike<A>, f: (a: A) => B) => B[];
/** map a function over an array, then map another function over every item except the last */
export declare const mapDelimit: <A, B>(xs: ArrayLike<A>, f: (a: A) => B, delimit: (b: B) => B) => B[];
export declare const sort: <A>(xs: ArrayLike<A>, compareFn?: ((a: A, b: A) => number) | undefined) => A[];
