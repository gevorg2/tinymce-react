import { pprintNumber, pprintArray, pprintString, render, pprint } from '../../main/ts/api/Pprint';
import { single, pnode } from '../../main/ts/api/Pnode';
import { assert } from 'chai';
var some = function (value) { return ({
    kind: 'some',
    value: value
}); };
var none = function () { return ({
    kind: 'none'
}); };
var pprintMaybe = function (pprintA) { return pprint(function (oa) {
    if (oa.kind === 'none') {
        return single('None()');
    }
    else {
        return pnode('Some(', [pprintA.pprint(oa.value)], ')');
    }
}); };
describe('pprintMaybe', function () {
    it('renders', function () {
        assert.strictEqual(render(some([some('a')]), pprintMaybe(pprintArray(pprintMaybe(pprintString)))), 'Some(\n' +
            '  [\n' +
            '    Some(\n' +
            '      "a"\n' +
            '    )\n' +
            '  ]\n' +
            ')');
        assert.strictEqual(render(none(), pprintMaybe(pprintNumber)), 'None()');
        assert.strictEqual(render(some(22), pprintMaybe(pprintNumber)), 'Some(\n' +
            '  22\n' +
            ')');
    });
});
//# sourceMappingURL=PprintMaybeTest.js.map