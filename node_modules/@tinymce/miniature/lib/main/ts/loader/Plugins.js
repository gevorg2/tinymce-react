import { Obj, Arr } from '@ephox/katamari';
import { Step } from '@ephox/agar';
import { getTinymce } from './Globals';
var readAllPlugins = function () {
    return getTinymce().map(function (tinymce) {
        return Obj.mapToArray(tinymce.PluginManager.lookup, function (plugin, name) {
            return {
                name: name,
                instance: plugin.instance,
                url: Obj.get(tinymce.PluginManager.urls, name)
            };
        });
    }).getOr([]);
};
var readPlugins = function (pluginNames) {
    return Arr.filter(readAllPlugins(), function (plugin) { return Arr.contains(pluginNames, plugin.name); });
};
var registerPlugins = function (plugins) {
    getTinymce().each(function (tinymce) {
        Arr.each(plugins, function (plugin) {
            plugin.url.each(function (url) { return tinymce.PluginManager.urls[plugin.name] = url; });
            tinymce.PluginManager.add(plugin.name, plugin.instance);
        });
    });
};
var sRegisterPlugins = function (plugins) { return Step.sync(function () { return registerPlugins(plugins); }); };
export { readAllPlugins, readPlugins, registerPlugins, sRegisterPlugins };
//# sourceMappingURL=Plugins.js.map