import { deleteTinymceGlobals, getTinymce } from './Globals';
import { loadScript, removeTinymceElements } from './Script';
import { updateTinymceUrls } from './Urls';
var versionToPackageName = function (version) { return version === 'latest' ? 'tinymce' : "tinymce-" + version; };
var loadFrom = function (customUrl, baseUrl, success, failure) {
    unload();
    loadScript(customUrl, function () {
        getTinymce().each(function (tinymce) {
            tinymce.baseURL = baseUrl;
            tinymce.baseURI = new tinymce.util.URI(tinymce.baseURL);
        });
        success();
    }, failure);
};
var load = function (version, success, failure) {
    var packageName = versionToPackageName(version);
    unload();
    loadScript("/project/node_modules/" + packageName + "/tinymce.min.js", function () {
        updateTinymceUrls(versionToPackageName(version));
        success();
    }, failure);
};
var unload = function () {
    getTinymce().each(function (tinymce) { return tinymce.remove(); });
    removeTinymceElements();
    deleteTinymceGlobals();
};
export { load, loadFrom, unload, };
//# sourceMappingURL=Loader.js.map