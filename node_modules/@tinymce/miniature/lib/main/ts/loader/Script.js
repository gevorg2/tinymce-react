import { Element, Attr, DomEvent, Insert, Body, SelectorFilter, Remove } from '@ephox/sugar';
import { Arr, Strings } from '@ephox/katamari';
export var loadScript = function (url, success, failure) {
    var script = Element.fromTag('script');
    Attr.set(script, 'src', url);
    var onLoad = DomEvent.bind(script, 'load', function () {
        onLoad.unbind();
        onError.unbind();
        success();
    });
    var onError = DomEvent.bind(script, 'error', function () {
        onError.unbind();
        onLoad.unbind();
        failure(new Error("Failed to load script: " + url));
    });
    Insert.append(Body.body(), script);
};
var isTinymcePackageUrl = function (url) { return Strings.contains(url, '/node_modules/tinymce/') || Strings.contains(url, '/node_modules/tinymce-'); };
var hasPackageUrl = function (name) { return function (elm) {
    return Attr.has(elm, name) && isTinymcePackageUrl(Attr.get(elm, name));
}; };
export var removeTinymceElements = function () {
    var elements = Arr.flatten([
        // Some older versions of tinymce leaves elements behind in the dom
        SelectorFilter.all('.mce-notification,.mce-window,#mce-modal-block'),
        Arr.filter(SelectorFilter.all('script'), hasPackageUrl('src')),
        Arr.filter(SelectorFilter.all('link'), hasPackageUrl('href')),
    ]);
    Arr.each(elements, Remove.remove);
};
//# sourceMappingURL=Script.js.map