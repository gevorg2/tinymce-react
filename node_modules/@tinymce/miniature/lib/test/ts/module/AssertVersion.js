import { Step, Chain } from '@ephox/agar';
import { getTinymce } from '../../../main/ts/loader/Globals';
import { Assert } from '@ephox/bedrock-client';
var assertTinymceVersion = function (tinymce, expectedMajor, expectedMinor) {
    var major = parseInt(tinymce.majorVersion, 10);
    var minor = parseInt(tinymce.minorVersion.split('.')[0], 10);
    Assert.eq('Not expected major', expectedMajor, major);
    Assert.eq('Not expected minor', expectedMinor, minor);
};
var assertVersion = function (expectedMajor, expectedMinor) {
    var tinymce = getTinymce().getOrDie('Failed to get global tinymce');
    assertTinymceVersion(tinymce, expectedMajor, expectedMinor);
};
var sAssertVersion = function (expectedMajor, expectedMinor) {
    return Step.sync(function () { return assertVersion(expectedMajor, expectedMinor); });
};
var cAssertEditorVersion = function (expectedMajor, expectedMinor) {
    return Chain.op(function (editor) { return assertTinymceVersion(editor.editorManager, expectedMajor, expectedMinor); });
};
export { assertVersion, sAssertVersion, cAssertEditorVersion };
//# sourceMappingURL=AssertVersion.js.map